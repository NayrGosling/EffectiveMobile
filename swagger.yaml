openapi: 3.0.0
info:
  title: Person Service API
  version: "1.0.0"
  description: >-
    REST API для управления сущностями Person с обогащением данных через внешние сервисы.
  contact:
    name: API Support
    email: support@example.com
servers:
  - url: http://localhost:8080
    description: Локальная разработка

tags:
  - name: Persons
    description: Операции над сущностями Person

paths:
  /persons:
    post:
      tags:
        - Persons
      summary: Создать нового Person
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonCreate'
      responses:
        '201':
          description: Person создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'
    get:
      tags:
        - Persons
      summary: Получить список Person
      parameters:
        - $ref: '#/components/parameters/NameFilter'
        - $ref: '#/components/parameters/SurnameFilter'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/PaginationOffset'
      responses:
        '200':
          description: Список Person
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
        '500':
          $ref: '#/components/responses/InternalError'

  /persons/{id}:
    get:
      tags:
        - Persons
      summary: Получить Person по ID
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '200':
          description: Person найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'
    put:
      tags:
        - Persons
      summary: Обновить Person по ID
      parameters:
        - $ref: '#/components/parameters/Id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonUpdate'
      responses:
        '204':
          description: Успешное обновление
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'
    delete:
      tags:
        - Persons
      summary: Удалить Person по ID
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '204':
          description: Успешное удаление
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

components:
  parameters:
    Id:
      name: id
      in: path
      required: true
      schema:
        type: integer
      description: Идентификатор Person
    NameFilter:
      name: name
      in: query
      schema:
        type: string
      description: Фильтр по имени (ILIKE)
    SurnameFilter:
      name: surname
      in: query
      schema:
        type: string
      description: Фильтр по фамилии (ILIKE)
    PaginationLimit:
      name: limit
      in: query
      schema:
        type: integer
        default: 20
      description: Количество записей
    PaginationOffset:
      name: offset
      in: query
      schema:
        type: integer
        default: 0
      description: Смещение

  responses:
    BadRequest:
      description: Неверный запрос
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Ресурс не найден
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalError:
      description: Внутренняя ошибка сервера
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  schemas:
    PersonCreate:
      type: object
      required:
        - name
        - surname
      properties:
        name:
          type: string
        surname:
          type: string
        patronymic:
          type: string
          nullable: true
    PersonUpdate:
      type: object
      required:
        - name
        - surname
      properties:
        name:
          type: string
        surname:
          type: string
        patronymic:
          type: string
          nullable: true
    Person:
      allOf:
        - $ref: '#/components/schemas/PersonCreate'
        - type: object
          required:
            - id
            - created_at
            - message
          properties:
            id:
              type: integer
            age:
              type: integer
              nullable: true
            gender:
              type: string
              nullable: true
            nationality:
              type: string
              nullable: true
            created_at:
              type: string
              format: date-time
            message:
              type: string
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
        message:
          type: string
